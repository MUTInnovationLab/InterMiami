span{
  color: white;
}
@media (min-width: 100px) and (max-width: 1500px) {
  .form {
    overflow-x: auto; 
    white-space: nowrap; 
  }

  .form {
    width: 100%; 
  }
}

.form {
  max-width: 100%;
  max-height: 550px;
  top: -45px;
}

.form:focus-within {
  overflow: initial;
}


:is(.form) label span, label input {
  flex: 1 100%;
  transition: all .3s ease-out;
}

.form input {
  box-shadow: inset 3px 3px 1px var(--sh);
}

.sm {
  justify-content: space-around;
}

.sm span {
  text-align: center;
}

.custom-select {
  position: relative;
}

/* Form and UI valid and invalid states */
.form input:focus,
.form select:focus {
  outline: 3px solid var(--col3);
  outline-offset: 1px;
}

.form input:invalid:not(:focus),
.form select:invalid:not(:focus) {
  outline-offset: 1px;
}

.form input:valid:not(:focus),
.form select:valid:not(:focus) {
  outline-offset: 1px;
}


.form:has(:invalid) .message {
  opacity: 1;
  margin: .25rem 0 0 0;
}

label:has(input:invalid),
label:has(select:invalid) {
  color: var(--col3);
  opacity: .8;
}

label:has(input:valid),
label:has(select:valid) {
  opacity: 1;
}

.form {
  transition: all .3s ease-out;
  background-color: var(--col5);
}

.form {
  transition: all .3s ease-out;
  background-color: var(--col1);
}

.form fieldset {
  border: 1px dashed white;
}

#popover-button {
  color: black;
}

.header-title {
  margin: 0 auto;
  text-align: center;
  color: black;
  font-weight: bold;
}

.menu {
  color: #000000;
  font-family: Arial;
  height: 50px; /* Set the desired height value */
  cursor: pointer;
}

ion-menu-button {
  color: black;
  cursor: pointer;
}

/* Update ion-toolbar background */
ion-toolbar {
  --background: #ffffff; /* White background */
}